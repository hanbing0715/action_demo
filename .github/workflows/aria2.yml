name: Build Aria2
on: push
jobs:
  build-static:
    runs-on: ubuntu-latest
    steps:
    - name: Install packages
      run: sudo apt-get install -y build-essential pkg-config cmake curl file
    - name: Create Temporary Directory
      run: mkdir -p $GITHUB_WORKSPACE/download
    - name: Download and build Zlib
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://www.zlib.net/zlib-1.2.11.tar.gz -svL | gzip -d - > zlib-1.2.11.tar
        tar xf zlib-1.2.11.tar
        cd zlib-1.2.11
        ./configure --prefix=$GITHUB_WORKSPACE
        make install
    - name: Download and build OpenSSL
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://www.openssl.org/source/openssl-1.1.1d.tar.gz -svL | gzip -d - > openssl-1.1.1d.tar
        tar xf openssl-1.1.1d.tar
        cd openssl-1.1.1d
        ./config --prefix=$GITHUB_WORKSPACE --openssldir=$GITHUB_WORKSPACE
        make && make install
    - name: Download and build LibSSH2
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://www.libssh2.org/download/libssh2-1.9.0.tar.gz -svL | gzip -d - > libssh2-1.9.0.tar
        tar xf libssh2-1.9.0.tar
        cd libssh2-1.9.0
        ./configure --with-libssl-prefix=$GITHUB_WORKSPACE --with-libz-prefix=$GITHUB_WORKSPACE --prefix=$GITHUB_WORKSPACE
        make install
    - name: Download and build SQLite
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://www.sqlite.org/2019/sqlite-autoconf-3300100.tar.gz -svL | gzip -d - > sqlite-autoconf-3300100.tar
        tar xf sqlite-autoconf-3300100.tar
        cd sqlite-autoconf-3300100
        ./configure --prefix=$GITHUB_WORKSPACE
        make install
    - name: Download and build c-ares
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://c-ares.haxx.se/download/c-ares-1.15.0.tar.gz -svL | gzip -d - > c-ares-1.15.0.tar
        tar xf c-ares-1.15.0.tar
        cd c-ares-1.15.0
        ./configure --prefix=$GITHUB_WORKSPACE
        make install
    - name: Download and build LibUV
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://github.com/libuv/libuv/archive/v1.32.0.tar.gz -svL | gzip -d - > libuv-1.32.0.tar
        tar xf libuv-1.32.0.tar
        cd libuv-1.32.0
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX:PATH=$GITHUB_WORKSPACE -DBUILD_TESTING=0 ..
        make install
        ln -s $GITHUB_WORKSPACE/lib/libuv_a.a $GITHUB_WORKSPACE/lib/libuv.a
    - name: Download and build JeMalloc
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://github.com/jemalloc/jemalloc/releases/download/5.2.1/jemalloc-5.2.1.tar.bz2 -svL | bzip2 -d - > jemalloc-5.2.1.tar
        tar xf jemalloc-5.2.1.tar
        cd jemalloc-5.2.1
        ./configure --enable-shared --enable-static --disable-documentation --prefix=$GITHUB_WORKSPACE
        make install
    - name: Download and build ICU4C
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://github.com/unicode-org/icu/releases/download/release-65-1/icu4c-65_1-src.tgz -svL | gzip -d - > icu4c-65.1.tar
        tar xf icu4c-65.1.tar
        mv icu icu4c-65.1
        cd icu4c-65.1/source
        ./configure --enable-static --prefix=$GITHUB_WORKSPACE
        make install
    - name: Download and build XZ
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://tukaani.org/xz/xz-5.2.4.tar.gz -svL | gzip -d - > xz-5.2.4.tar
        tar xf xz-5.2.4.tar
        cd xz-5.2.4
        ./configure --disable-doc --disable-xz --disable-xzdec --disable-lzmadec --disable-lzmainfo --disable-lzma-links --disable-scripts --prefix=$GITHUB_WORKSPACE
        make install
    - name: Download and build LibXML2
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl http://xmlsoft.org/sources/libxml2-2.9.10.tar.gz -svL | gzip -d - > libxml2-2.9.10.tar
        tar xf libxml2-2.9.10.tar
        cd libxml2-2.9.10
        PKG_CONFIG_PATH=$GITHUB_WORKSPACE/lib/pkgconfig ./configure --without-python --with-icu --with-zlib --prefix=$GITHUB_WORKSPACE
        make install
    - name: Download and build Aria2
      env:
        CC: gcc
        CXX: g++
      run: |
        cd $GITHUB_WORKSPACE/download
        curl https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz -svL | gzip -d - > aria2-1.35.0.tar
        tar xf aria2-1.35.0.tar
        cd aria2-1.35.0
        ZLIB_CFLAGS=-I$GITHUB_WORKSPACE/include ZLIB_LIBS="$GITHUB_WORKSPACE/lib/libz.a" LIBUV_CFLAGS=-I$GITHUB_WORKSPACE/include LIBUV_LIBS="$GITHUB_WORKSPACE/lib/libuv.a -lpthread" LIBXML2_CFLAGS=-I$GITHUB_WORKSPACE/include/libxml2 LIBXML2_LIBS="$GITHUB_WORKSPACE/lib/libxml2.a $GITHUB_WORKSPACE/lib/libz.a $GITHUB_WORKSPACE/lib/liblzma.a $GITHUB_WORKSPACE/lib/libicui18n.a $GITHUB_WORKSPACE/lib/libicuuc.a $GITHUB_WORKSPACE/lib/libicudata.a -lpthread -ldl" SQLITE3_CFLAGS=-I$GITHUB_WORKSPACE/include SQLITE3_LIBS="$GITHUB_WORKSPACE/lib/libsqlite3.a -ldl -lpthread" OPENSSL_CFLAGS=-I$GITHUB_WORKSPACE/include OPENSSL_LIBS="$GITHUB_WORKSPACE/lib/libssl.a $GITHUB_WORKSPACE/lib/libcrypto.a -ldl -lpthread" LIBSSH2_CFLAGS=-I$GITHUB_WORKSPACE/include LIBSSH2_LIBS="$GITHUB_WORKSPACE/lib/libssh2.a $GITHUB_WORKSPACE/lib/libz.a $GITHUB_WORKSPACE/lib/libssl.a $GITHUB_WORKSPACE/lib/libcrypto.a -ldl -lpthread" LIBCARES_CFLAGS=-I$GITHUB_WORKSPACE/include LIBCARES_LIBS="$GITHUB_WORKSPACE/lib/libcares.a" JEMALLOC_CFLAGS=-I$GITHUB_WORKSPACE/include JEMALLOC_LIBS="$GITHUB_WORKSPACE/lib/libjemalloc.a -lpthread" ./configure --with-libuv --with-openssl --with-sqlite3 --with-libxml2 --with-libcares --with-libz --with-jemalloc --disable-libaria2 --prefix=$GITHUB_WORKSPACE
        make install
    - name: Strip Binary
      run: strip $GITHUB_WORKSPACE/bin/aria2c -o $GITHUB_WORKSPACE/aria2c
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: aria2c
        path: aria2c